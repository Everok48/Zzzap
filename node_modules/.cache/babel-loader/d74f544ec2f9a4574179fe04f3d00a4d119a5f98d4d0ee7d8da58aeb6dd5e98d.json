{"ast":null,"code":"var _jsxFileName = \"/home/ever/todo-project/Todo/src/components/UI/Button.tsx\";\nimport styles from './Button.module.css';\n\n// Определяем типы для пропсов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Типизируем компонент\nconst Button = ({\n  children,\n  disabled = false,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ...rest,\n    className: styles.button,\n    disabled: disabled,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["styles","jsxDEV","_jsxDEV","Button","children","disabled","rest","className","button","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ever/todo-project/Todo/src/components/UI/Button.tsx"],"sourcesContent":["import styles from './Button.module.css'\n\n// Определяем типы для пропсов\ninterface ButtonProps {\n  children: React.ReactNode\n  disabled?: boolean\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void // Для событий, таких как onClick\n  title?: string // Если передаете title, как в TodosActions\n  [key: string]: any // Для остальных пропсов, передаваемых через ...props\n}\n\n// Типизируем компонент\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  disabled = false,\n  ...rest\n}) => {\n  return (\n    <button {...rest} className={styles.button} disabled={disabled}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,qBAAqB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASA;AACA,MAAMC,MAA6B,GAAGA,CAAC;EACrCC,QAAQ;EACRC,QAAQ,GAAG,KAAK;EAChB,GAAGC;AACL,CAAC,KAAK;EACJ,oBACEJ,OAAA;IAAA,GAAYI,IAAI;IAAEC,SAAS,EAAEP,MAAM,CAACQ,MAAO;IAACH,QAAQ,EAAEA,QAAS;IAAAD,QAAA,EAC5DA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAAAC,EAAA,GAVKV,MAA6B;AAYnC,eAAeA,MAAM;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}